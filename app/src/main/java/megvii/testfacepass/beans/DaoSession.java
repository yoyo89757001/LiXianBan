package megvii.testfacepass.beans;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import megvii.testfacepass.beans.BaoCunBean;
import megvii.testfacepass.beans.BenDiUserInFo;
import megvii.testfacepass.beans.MoShengRenBean;
import megvii.testfacepass.beans.QianDaoId;
import megvii.testfacepass.beans.TanChuangBean;

import megvii.testfacepass.beans.BaoCunBeanDao;
import megvii.testfacepass.beans.BenDiUserInFoDao;
import megvii.testfacepass.beans.MoShengRenBeanDao;
import megvii.testfacepass.beans.QianDaoIdDao;
import megvii.testfacepass.beans.TanChuangBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig baoCunBeanDaoConfig;
    private final DaoConfig benDiUserInFoDaoConfig;
    private final DaoConfig moShengRenBeanDaoConfig;
    private final DaoConfig qianDaoIdDaoConfig;
    private final DaoConfig tanChuangBeanDaoConfig;

    private final BaoCunBeanDao baoCunBeanDao;
    private final BenDiUserInFoDao benDiUserInFoDao;
    private final MoShengRenBeanDao moShengRenBeanDao;
    private final QianDaoIdDao qianDaoIdDao;
    private final TanChuangBeanDao tanChuangBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        baoCunBeanDaoConfig = daoConfigMap.get(BaoCunBeanDao.class).clone();
        baoCunBeanDaoConfig.initIdentityScope(type);

        benDiUserInFoDaoConfig = daoConfigMap.get(BenDiUserInFoDao.class).clone();
        benDiUserInFoDaoConfig.initIdentityScope(type);

        moShengRenBeanDaoConfig = daoConfigMap.get(MoShengRenBeanDao.class).clone();
        moShengRenBeanDaoConfig.initIdentityScope(type);

        qianDaoIdDaoConfig = daoConfigMap.get(QianDaoIdDao.class).clone();
        qianDaoIdDaoConfig.initIdentityScope(type);

        tanChuangBeanDaoConfig = daoConfigMap.get(TanChuangBeanDao.class).clone();
        tanChuangBeanDaoConfig.initIdentityScope(type);

        baoCunBeanDao = new BaoCunBeanDao(baoCunBeanDaoConfig, this);
        benDiUserInFoDao = new BenDiUserInFoDao(benDiUserInFoDaoConfig, this);
        moShengRenBeanDao = new MoShengRenBeanDao(moShengRenBeanDaoConfig, this);
        qianDaoIdDao = new QianDaoIdDao(qianDaoIdDaoConfig, this);
        tanChuangBeanDao = new TanChuangBeanDao(tanChuangBeanDaoConfig, this);

        registerDao(BaoCunBean.class, baoCunBeanDao);
        registerDao(BenDiUserInFo.class, benDiUserInFoDao);
        registerDao(MoShengRenBean.class, moShengRenBeanDao);
        registerDao(QianDaoId.class, qianDaoIdDao);
        registerDao(TanChuangBean.class, tanChuangBeanDao);
    }
    
    public void clear() {
        baoCunBeanDaoConfig.clearIdentityScope();
        benDiUserInFoDaoConfig.clearIdentityScope();
        moShengRenBeanDaoConfig.clearIdentityScope();
        qianDaoIdDaoConfig.clearIdentityScope();
        tanChuangBeanDaoConfig.clearIdentityScope();
    }

    public BaoCunBeanDao getBaoCunBeanDao() {
        return baoCunBeanDao;
    }

    public BenDiUserInFoDao getBenDiUserInFoDao() {
        return benDiUserInFoDao;
    }

    public MoShengRenBeanDao getMoShengRenBeanDao() {
        return moShengRenBeanDao;
    }

    public QianDaoIdDao getQianDaoIdDao() {
        return qianDaoIdDao;
    }

    public TanChuangBeanDao getTanChuangBeanDao() {
        return tanChuangBeanDao;
    }

}
